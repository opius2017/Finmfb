# Default values for finmfb.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

global:
  environment: production
  imageRegistry: ""
  imageTag: latest
  imagePullSecrets: []

api:
  replicaCount: 3
  image:
    repository: finmfb-api
    tag: latest
    pullPolicy: Always
  environment: "Production"
  logging:
    default: "Information"
    microsoft: "Warning"
    lifetime: "Information"
  caching:
    enabled: "true"
    expirationMinutes: "60"
  metrics:
    enabled: "true"
  tracing:
    enabled: "true"
  resilience:
    retryCount: "3"
    circuitBreakerFailures: "5"
    circuitBreakerDuration: "30"
  corsPolicy:
    allowedOrigins:
      - "https://portal.finmfb.com"
      - "https://api.finmfb.com"
  featureFlags:
    EnableAdvancedReporting: "true"
    EnableMobileBanking: "true"
  settings:
    EnableResponseCompression: "true"
    EnableRequestBuffering: "false"
  performance:
    EnableResponseCaching: "true"
    EnableOutputCaching: "true"
  rateLimiting:
    Enabled: "true"
    DefaultLimitPerMinute: "100"
  resources:
    limits:
      cpu: 1
      memory: 1Gi
    requests:
      cpu: 500m
      memory: 512Mi
  autoscaling:
    enabled: true
    minReplicas: 3
    maxReplicas: 10
    targetCPUUtilizationPercentage: 70
    targetMemoryUtilizationPercentage: 80
  livenessProbe:
    path: /health/live
    initialDelaySeconds: 30
    timeoutSeconds: 5
    periodSeconds: 10
  readinessProbe:
    path: /health/ready
    initialDelaySeconds: 15
    timeoutSeconds: 5
    periodSeconds: 10
  service:
    type: ClusterIP
    port: 80
    httpsPort: 443

frontend:
  replicaCount: 3
  image:
    repository: finmfb-frontend
    tag: latest
    pullPolicy: Always
  resources:
    limits:
      cpu: 500m
      memory: 512Mi
    requests:
      cpu: 200m
      memory: 256Mi
  autoscaling:
    enabled: true
    minReplicas: 3
    maxReplicas: 10
    targetCPUUtilizationPercentage: 70
    targetMemoryUtilizationPercentage: 80
  livenessProbe:
    path: /
    initialDelaySeconds: 30
    timeoutSeconds: 5
    periodSeconds: 10
  readinessProbe:
    path: /
    initialDelaySeconds: 15
    timeoutSeconds: 5
    periodSeconds: 10
  service:
    type: ClusterIP
    port: 80

gateway:
  replicaCount: 2
  image:
    repository: finmfb-gateway
    tag: latest
    pullPolicy: Always
  resources:
    limits:
      cpu: 500m
      memory: 512Mi
    requests:
      cpu: 200m
      memory: 256Mi
  service:
    type: ClusterIP
    port: 80
    httpsPort: 443

ingress:
  enabled: true
  className: nginx
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/use-regex: "true"
    cert-manager.io/cluster-issuer: letsencrypt-prod
    nginx.ingress.kubernetes.io/proxy-body-size: "10m"
  hosts:
    - host: api.finmfb.com
      paths:
        - path: /
          pathType: Prefix
          service: gateway
          port: 80
    - host: portal.finmfb.com
      paths:
        - path: /
          pathType: Prefix
          service: frontend
          port: 80
  tls:
    - secretName: finmfb-tls
      hosts:
        - api.finmfb.com
        - portal.finmfb.com

secrets:
  create: true
  dbConnectionString: ""
  redisConnectionString: ""
  rabbitmqConnectionString: ""
  appInsightsConnectionString: ""

networkPolicy:
  enabled: true

# Database configuration
database:
  enabled: true
  image:
    repository: mcr.microsoft.com/mssql/server
    tag: 2022-latest
    pullPolicy: IfNotPresent
  edition: "Express"
  resources:
    limits:
      memory: 2Gi
      cpu: "2"
    requests:
      memory: 1Gi
      cpu: "1"
  storage:
    storageClass: "standard"
    size: 10Gi

# Redis configuration
redis:
  enabled: true
  replicas: 1
  image:
    repository: redis
    tag: alpine
    pullPolicy: IfNotPresent
  resources:
    limits:
      memory: 1Gi
      cpu: "1"
    requests:
      memory: 512Mi
      cpu: "0.5"
  storage:
    storageClass: "standard"
    size: 5Gi

# RabbitMQ configuration
rabbitmq:
  enabled: true
  replicas: 1
  image:
    repository: rabbitmq
    tag: 3-management
    pullPolicy: IfNotPresent
  auth:
    username: "admin"
  resources:
    limits:
      memory: 1Gi
      cpu: "1"
    requests:
      memory: 512Mi
      cpu: "0.5"
  storage:
    storageClass: "standard"
    size: 5Gi

# Pod Disruption Budget
podDisruptionBudget:
  enabled: true
  api:
    minAvailable: 2
  frontend:
    minAvailable: 1

# Monitoring
monitoring:
  enabled: true
  namespace: finmfb-monitoring
  prometheus:
    enabled: true
    image:
      repository: prom/prometheus
      tag: latest
      pullPolicy: IfNotPresent
    resources:
      limits:
        memory: 1Gi
        cpu: "1"
      requests:
        memory: 512Mi
        cpu: "0.5"
    storage:
      storageClass: "standard"
      size: 10Gi
  grafana:
    enabled: true
    image:
      repository: grafana/grafana
      tag: latest
      pullPolicy: IfNotPresent
    resources:
      limits:
        memory: 1Gi
        cpu: "1"
      requests:
        memory: 512Mi
        cpu: "0.5"
    storage:
      storageClass: "standard"
      size: 5Gi
    adminPassword: "GrafanaStrongPassword123!"