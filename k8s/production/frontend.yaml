apiVersion: apps/v1
kind: Deployment
metadata:
  name: fintech-frontend
  namespace: fintech-prod
  labels:
    app: fintech-frontend
    environment: production
spec:
  replicas: 3
  selector:
    matchLabels:
      app: fintech-frontend
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: fintech-frontend
        environment: production
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - fintech-frontend
              topologyKey: "kubernetes.io/hostname"
      containers:
      - name: fintech-frontend
        image: ghcr.io/opius2017/finmfb/fintech-frontend:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 80
          name: http
        env:
        - name: NODE_ENV
          value: "production"
        - name: VITE_API_URL
          value: "https://api.finmfb.com"
        - name: VITE_APP_ENVIRONMENT
          value: "production"
        resources:
          limits:
            cpu: "1"
            memory: "1Gi"
          requests:
            cpu: "500m"
            memory: "512Mi"
        readinessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 10
          periodSeconds: 5
        livenessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 20
          periodSeconds: 15
      imagePullSecrets:
      - name: github-container-registry
---
apiVersion: v1
kind: Service
metadata:
  name: fintech-frontend
  namespace: fintech-prod
  labels:
    app: fintech-frontend
    environment: production
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: 80
    protocol: TCP
    name: http
  selector:
    app: fintech-frontend
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: fintech-frontend-ingress
  namespace: fintech-prod
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    cert-manager.io/cluster-issuer: letsencrypt-prod
    nginx.ingress.kubernetes.io/proxy-buffer-size: "128k"
    nginx.ingress.kubernetes.io/configuration-snippet: |
      add_header Cache-Control "public, max-age=3600, must-revalidate";
      add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
      add_header X-Content-Type-Options "nosniff" always;
      add_header X-Frame-Options "SAMEORIGIN" always;
      add_header X-XSS-Protection "1; mode=block" always;
      add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' https://cdn.jsdelivr.net; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; font-src 'self' https://fonts.gstatic.com; img-src 'self' data: https:; connect-src 'self' https://api.finmfb.com;" always;
spec:
  tls:
  - hosts:
    - portal.finmfb.com
    secretName: fintech-frontend-prod-tls
  rules:
  - host: portal.finmfb.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: fintech-frontend
            port:
              number: 80
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: fintech-frontend-hpa
  namespace: fintech-prod
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: fintech-frontend
  minReplicas: 3
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 25
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 0
      policies:
      - type: Percent
        value: 50
        periodSeconds: 30