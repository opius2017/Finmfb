apiVersion: v1
kind: Secret
metadata:
  name: fintech-prod-secrets
  namespace: fintech-prod
type: Opaque
# Note: In a real production environment, you would use a secrets management solution
# like HashiCorp Vault, AWS Secrets Manager, or Kubernetes External Secrets instead 
# of storing secrets directly in manifests.
# 
# These are placeholder values. In production, you would:
# 1. Use a CI/CD pipeline to inject these values
# 2. Or use a secrets management solution
# 3. Never commit actual secrets to version control
data:
  # These are base64 encoded placeholder values - REPLACE IN PRODUCTION
  db-connection-string: UGxhY2Vob2xkZXJfQ29ubmVjdGlvblN0cmluZw==
  redis-connection-string: cmVkaXMtc2VydmljZTo2Mzc5
  jwt-secret-key: UGxhY2Vob2xkZXJfSldUX1NlY3JldF9LZXk=
  rabbitmq-username: YWRtaW4=
  rabbitmq-password: UGFzc3dvcmQxMjM=
  rabbitmq-erlang-cookie: UGxhY2Vob2xkZXJfRXJsYW5nX0Nvb2tpZQ==
---
apiVersion: v1
kind: Secret
metadata:
  name: github-container-registry
  namespace: fintech-prod
type: kubernetes.io/dockerconfigjson
data:
  # This is a placeholder - you would inject the actual credentials in your CI/CD pipeline
  .dockerconfigjson: eyJhdXRocyI6eyJnaGNyLmlvIjp7InVzZXJuYW1lIjoiZ2l0aHViLXVzZXIiLCJwYXNzd29yZCI6ImdpdGh1Yi10b2tlbiIsImF1dGgiOiJaMmwwYUhWaUxYVnpaWEk2WjJsMGFIVmlMWFJ2YTJWdSJ9fX0=
---
apiVersion: v1
kind: Secret
metadata:
  name: rabbitmq-auth
  namespace: fintech-prod
type: Opaque
data:
  # This is a placeholder for basic auth to the RabbitMQ management interface
  # Format: htpasswd -nb admin password
  auth: YWRtaW46JGFwcjEkRXA5S0FaUmkkSVdFY1FzUXJSYlN5TFpoVlN4VzUwCg==
---
# Example of creating a namespace for production if it doesn't exist
apiVersion: v1
kind: Namespace
metadata:
  name: fintech-prod
  labels:
    name: fintech-prod
    environment: production
---
# Example of a NetworkPolicy to restrict traffic
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: fintech-backend-network-policy
  namespace: fintech-prod
spec:
  podSelector:
    matchLabels:
      app: fintech-backend
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          name: fintech-prod
    - podSelector:
        matchLabels:
          app: fintech-frontend
    ports:
    - protocol: TCP
      port: 80
    - protocol: TCP
      port: 443
  egress:
  - to:
    - podSelector:
        matchLabels:
          app: redis
    ports:
    - protocol: TCP
      port: 6379
  - to:
    - podSelector:
        matchLabels:
          app: rabbitmq
    ports:
    - protocol: TCP
      port: 5672
  - ports:
    - port: 53
      protocol: UDP
    - port: 53
      protocol: TCP
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: fintech-frontend-network-policy
  namespace: fintech-prod
spec:
  podSelector:
    matchLabels:
      app: fintech-frontend
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - namespaceSelector: {}
    ports:
    - protocol: TCP
      port: 80
  egress:
  - to:
    - podSelector:
        matchLabels:
          app: fintech-backend
    ports:
    - protocol: TCP
      port: 80
    - protocol: TCP
      port: 443
  - ports:
    - port: 53
      protocol: UDP
    - port: 53
      protocol: TCP