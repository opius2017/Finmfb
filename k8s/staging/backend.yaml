apiVersion: apps/v1
kind: Deployment
metadata:
  name: fintech-backend
  namespace: fintech-staging
  labels:
    app: fintech-backend
    environment: staging
spec:
  replicas: 3
  selector:
    matchLabels:
      app: fintech-backend
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: fintech-backend
        environment: staging
    spec:
      containers:
      - name: fintech-backend
        image: ghcr.io/opius2017/finmfb/fintech-backend:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 80
          name: http
        - containerPort: 443
          name: https
        env:
        - name: ASPNETCORE_ENVIRONMENT
          value: "Staging"
        - name: ConnectionStrings__DefaultConnection
          valueFrom:
            secretKeyRef:
              name: fintech-staging-secrets
              key: db-connection-string
        - name: ConnectionStrings__Redis
          valueFrom:
            secretKeyRef:
              name: fintech-staging-secrets
              key: redis-connection-string
        - name: JwtSettings__Key
          valueFrom:
            secretKeyRef:
              name: fintech-staging-secrets
              key: jwt-secret-key
        - name: JwtSettings__Issuer
          value: "FinTechAPI.Staging"
        - name: JwtSettings__Audience
          value: "FinTechClient.Staging"
        - name: JwtSettings__DurationInMinutes
          value: "30"
        - name: RabbitMQ__Host
          value: "rabbitmq-service"
        - name: RabbitMQ__Port
          value: "5672"
        - name: RabbitMQ__Username
          valueFrom:
            secretKeyRef:
              name: fintech-staging-secrets
              key: rabbitmq-username
        - name: RabbitMQ__Password
          valueFrom:
            secretKeyRef:
              name: fintech-staging-secrets
              key: rabbitmq-password
        resources:
          limits:
            cpu: "2"
            memory: "2Gi"
          requests:
            cpu: "1"
            memory: "1Gi"
        readinessProbe:
          httpGet:
            path: /health/ready
            port: 80
          initialDelaySeconds: 15
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /health/live
            port: 80
          initialDelaySeconds: 30
          periodSeconds: 30
      imagePullSecrets:
      - name: github-container-registry
---
apiVersion: v1
kind: Service
metadata:
  name: fintech-backend
  namespace: fintech-staging
  labels:
    app: fintech-backend
    environment: staging
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: 80
    protocol: TCP
    name: http
  - port: 443
    targetPort: 443
    protocol: TCP
    name: https
  selector:
    app: fintech-backend
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: fintech-backend-ingress
  namespace: fintech-staging
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    cert-manager.io/cluster-issuer: letsencrypt-prod
spec:
  tls:
  - hosts:
    - api-staging.finmfb.com
    secretName: fintech-backend-staging-tls
  rules:
  - host: api-staging.finmfb.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: fintech-backend
            port:
              number: 80
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: fintech-backend-hpa
  namespace: fintech-staging
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: fintech-backend
  minReplicas: 3
  maxReplicas: 7
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 75
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 75